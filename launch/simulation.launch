<?xml version="1.0"?>
<launch>


  <arg name="limited" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false" />
  <arg name="sim" default="true" />

  <!-- spawn rack -->
  <node name="rack" pkg="gazebo_ros" type="spawn_model" args="-file $(find ur5_notebook)/launch/rack.urdf -urdf -model rack -x -0.58" />

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" default="worlds/empty.world"/-->
    <arg name="world_name" default="$(find ur5_notebook)/launch/simulation.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- spwan ur5 -->
  <!-- send robot urdf to param server -->
  <include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.8 -y 0.0 -x 0.1" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- Remap follow_joint_trajectory -->
  <remap if="$(arg sim)" from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

  <!-- Launch moveit -->
  <include file="$(find ur5_moveit_config)/launch/move_group.launch">
    <arg name="limited" default="$(arg limited)"/>
    <arg name="debug" default="$(arg debug)" />
  </include>

  <!-- the cylinder poses publisher node -->
  <node name="blocks_poses_publisher" pkg="ur5_notebook" type="blocks_poses_publisher" output="screen" />

  <!-- the cylinder poses publisher node -->
  <node name="ur5_vision" pkg="ur5_notebook" type="ur5_vision_2.py" output="screen" />
  <node name="ur5_mp" pkg="ur5_notebook" type="ur5_mp_2.py" output="screen" />
  <node name="ur5_gripper" pkg="ur5_notebook" type="ur5_gripper_2.py" output="screen"/>



</launch>
